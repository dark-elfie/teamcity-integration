{"name": "Dodawanie nowych awizacji z poziomu planera", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.planner_test.TestPlanner object at 0x000001D2927EBC10>\n\n    @allure.title(\"Dodawanie nowych awizacji z poziomu planera\")\n    def test_add_advice_planner(self):\n        side_bar = SideBar(self.driver)\n        side_bar.get_in_planner()\n        planner_page = PlannerPage(self.driver)\n        planner_page.go_to_create_advice()\n        advice_page = AdvicePage(self.driver)\n        advice_page.go_to_carriage()\n        advice_page.add_carrier()\n>       advice_page.add_carriage_data_planner(AWData.vehicle_number, AWData.driver_name, AWData.driver_last_name,\n                                              AWData.id_type, AWData.id_number, AWData.driver_phone,\n                                              PlannerData.schedule)\n\ntests\\planner_test.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\advices_page.py:337: in add_carriage_data_planner\n    self.wait.until(ec.element_to_be_clickable((By.XPATH, schedule_option)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f19b66aff82599339e96bc8b6af44bc2\")>, method = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x000001D292510760>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "Przejdz do 'Planner'", "status": "passed", "start": 1632815250533, "stop": 1632815250674}, {"name": "Przejscie do tworzenia awizacji z wiersza", "status": "passed", "start": 1632815250674, "stop": 1632815251934}, {"name": "Przejscie do nastepnej strony (dane przewoznika)", "status": "passed", "start": 1632815251934, "stop": 1632815252953}, {"name": "Dodawanie przewoznika", "status": "passed", "start": 1632815252953, "stop": 1632815253887}, {"name": "Dodawanie danych przewozu", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Sara\\PycharmProjects\\TMS_testy\\pages\\advices_page.py\", line 337, in add_carriage_data_planner\n    self.wait.until(ec.element_to_be_clickable((By.XPATH, schedule_option)))\n  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "vehicle_number", "value": "'123456'"}, {"name": "driver_name", "value": "'Jan'"}, {"name": "driver_last_name", "value": "'Nowak'"}, {"name": "id_type", "value": "'paszport'"}, {"name": "id_number", "value": "'pl1234'"}, {"name": "driver_phone", "value": "'789456123'"}, {"name": "schedule", "value": "'2021-09-13 - 2021-09-20'"}], "start": 1632815253887, "stop": 1632815269505}], "attachments": [{"name": "log", "source": "96ab13b8-17fc-45b0-88dc-15fadc96fad1-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e129925a-1a36-40f2-94b3-012e9a3f28e4-attachment.txt", "type": "text/plain"}], "start": 1632815250533, "stop": 1632815269506, "uuid": "1b6d2cc5-18af-421f-afd5-a5649853b742", "historyId": "cd8e4459f2e0579e0ca328f6f9901b6a", "testCaseId": "2f7fc6917ccda9eb0fcf9a2dbac49459", "fullName": "tests.planner_test.TestPlanner#test_add_advice_planner", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_in_admin')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "planner_test"}, {"name": "subSuite", "value": "TestPlanner"}, {"name": "host", "value": "DESKTOP-LSRI7PH"}, {"name": "thread", "value": "5792-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.planner_test"}]}