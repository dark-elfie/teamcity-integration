{"name": "Stworz nowa awizacje", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.advices_test.TestAdvices object at 0x0000016F75BBF700>\n\n    @allure.title(\"Stworz nowa awizacje\")\n    @pytest.mark.singleAw\n    def test_add(self):\n        side_bar = SideBar(self.driver)\n        side_bar.get_in_advices()\n        advice_page = AdvicePage(self.driver)\n        advice_page.add_new()\n        advice_page.add_receiver(AWData.receiver, AWData.receiver_contact, AWData.receiver_address)\n>       advice_page.add_deliverer(AWData.deliverer, AWData.deliverer_contact, AWData.deliverer_address)\n\ntests\\advices_test.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\advices_page.py:168: in add_deliverer\n    self.wait.until(ec.element_to_be_clickable((By.XPATH, deliverer_input_option_xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d9d4b2b3620d115c29a703e266be4f0d\")>, method = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x0000016F75C13F70>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "Przejdz do 'Awizacje'", "status": "passed", "start": 1632223181038, "stop": 1632223181254}, {"name": "Dodawanie awizacji", "status": "passed", "start": 1632223181255, "stop": 1632223184543}, {"name": "Dodawanie odbiorcy", "status": "passed", "parameters": [{"name": "receiver_input", "value": "'Wytwórnia Pasz Lira Sp. z o.o.'"}, {"name": "receiver_contact", "value": "'Karol Karolczyk - karolczyk@aaaaaaa.pl'"}, {"name": "receiver_address", "value": "'64-010 , Krzywiń , Gen.Chłapowskiego 36'"}], "start": 1632223184543, "stop": 1632223186327}, {"name": "Dodawanie nadawcy", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Sara\\PycharmProjects\\TMS_testy\\pages\\advices_page.py\", line 168, in add_deliverer\n    self.wait.until(ec.element_to_be_clickable((By.XPATH, deliverer_input_option_xpath)))\n  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "deliverer_input", "value": "'GR Cudak Mariusz'"}, {"name": "deliverer_contact", "value": "'Kamil Kamilak - kamilak@bbbbb.pl'"}, {"name": "deliverer_address", "value": "'67-300 , Długie , Długie 95'"}], "start": 1632223186327, "stop": 1632223202073}], "attachments": [{"name": "log", "source": "9137c263-ac11-412e-8a06-8b81c9e383b5-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d73c33b3-6539-4abe-83b6-e9a0c863bda5-attachment.txt", "type": "text/plain"}], "start": 1632223181038, "stop": 1632223202074, "uuid": "99f3c5c2-8e3e-444a-8f03-f6dc06cc5b2e", "historyId": "ba007389a7e026a2a25e353d9ada7152", "testCaseId": "3582081905e26b6f6398f50a96fee665", "fullName": "tests.advices_test.TestAdvices#test_add", "labels": [{"name": "tag", "value": "singleAw"}, {"name": "tag", "value": "@pytest.mark.usefixtures('log_in_admin')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "advices_test"}, {"name": "subSuite", "value": "TestAdvices"}, {"name": "host", "value": "DESKTOP-LSRI7PH"}, {"name": "thread", "value": "16208-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.advices_test"}]}