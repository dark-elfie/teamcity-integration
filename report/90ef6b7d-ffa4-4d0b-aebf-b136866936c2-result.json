{"name": "Dodawanie nowego wiersza w planerze", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=93.0.4577.82)", "trace": "self = <tests.planner_test.TestPlanner object at 0x000001C4B60542E0>\n\n    @allure.title(\"Dodawanie nowego wiersza w planerze\")\n    def test_add_new_line(self):\n        side_bar = SideBar(self.driver)\n        side_bar.get_in_planner()\n        planner_page = PlannerPage(self.driver)\n        if self.driver.find_element_by_xpath(\"//li[contains(@class, 'page-item active')]/a\").text != \"1\":\n            self.driver.find_element_by_xpath(\"//li[contains(@class, 'page-item')]/a[text()='1']\").click()\n        planner_page.add_new_line()\n        planner_page.set_ks(PlannerData.KS)\n        planner_page.set_kz(PlannerData.KZ)\n        planner_page.set_loading_date(PlannerData.loading_date)\n        planner_page.set_delivery_date(PlannerData.delivery_date)\n        planner_page.set_carrier(PlannerData.carrier)\n        planner_page.set_price(PlannerData.price)\n        planner_page.set_currency(PlannerData.currency)\n>       planner_page.validate_data(PlannerData.KS, PlannerData.KZ, PlannerData.loading_date, PlannerData.delivery_date,\n                                   PlannerData.carrier, PlannerData.price)\n\ntests\\planner_test.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\planner_page.py:183: in validate_data\n    assert price in self.driver.find_element_by_xpath(self.price_xpath).text\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:76: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:633: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C4B6052850>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77DD7A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77DD7A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=93.0.4577.82)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: StaleElementReferenceException"}, "steps": [{"name": "Przejdz do 'Planner'", "status": "passed", "start": 1632747538377, "stop": 1632747538516}, {"name": "Tworzenie nowego wiersza", "status": "passed", "start": 1632747539695, "stop": 1632747544117}, {"name": "Wpisanie numeru KS", "status": "passed", "parameters": [{"name": "KS", "value": "'4460'"}], "start": 1632747544117, "stop": 1632747545204}, {"name": "Wpisanie numeru KZ", "status": "passed", "parameters": [{"name": "KZ", "value": "'7533'"}], "start": 1632747545204, "stop": 1632747546145}, {"name": "Wpisanie daty zaladunku", "status": "passed", "parameters": [{"name": "loading_date", "value": "'2021-09-14'"}], "start": 1632747546145, "stop": 1632747547014}, {"name": "Wpisanie daty dostawy", "status": "passed", "parameters": [{"name": "delivery_date", "value": "'2021-09-14'"}], "start": 1632747547015, "stop": 1632747547903}, {"name": "Wpisanie przewoznika", "status": "passed", "parameters": [{"name": "carrier", "value": "'PHU Daw-Trans Sławomir Podstawka'"}], "start": 1632747547903, "stop": 1632747549068}, {"name": "Wpisanie stawki", "status": "passed", "parameters": [{"name": "price", "value": "'122'"}], "start": 1632747549068, "stop": 1632747549810}, {"name": "Wpisanie waluty", "status": "passed", "parameters": [{"name": "currency", "value": "'pln'"}], "start": 1632747549810, "stop": 1632747550700}, {"name": "Walidacja danych w wierszu", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=93.0.4577.82)\n\n", "trace": "  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Sara\\PycharmProjects\\TMS_testy\\pages\\planner_page.py\", line 183, in validate_data\n    assert price in self.driver.find_element_by_xpath(self.price_xpath).text\n  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 76, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)['value']\n  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "KS", "value": "'4460'"}, {"name": "KZ", "value": "'7533'"}, {"name": "loading_date", "value": "'2021-09-14'"}, {"name": "delivery_date", "value": "'2021-09-14'"}, {"name": "carrier", "value": "'PHU Daw-Trans Sławomir Podstawka'"}, {"name": "price", "value": "'122'"}], "start": 1632747550700, "stop": 1632747551296}], "attachments": [{"name": "log", "source": "ad99fabc-89ec-4e75-84f6-d23f47fa2041-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "45dc4177-2843-4ab2-85d8-f152e5b75760-attachment.txt", "type": "text/plain"}], "start": 1632747538377, "stop": 1632747551298, "uuid": "cbe5dfee-d5ac-47ae-984e-953092064990", "historyId": "d82b59c337f271fb570efce4d0a790d0", "testCaseId": "621c45301730789daa91db31b24fdbfc", "fullName": "tests.planner_test.TestPlanner#test_add_new_line", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_in_admin')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "planner_test"}, {"name": "subSuite", "value": "TestPlanner"}, {"name": "host", "value": "DESKTOP-LSRI7PH"}, {"name": "thread", "value": "996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.planner_test"}]}