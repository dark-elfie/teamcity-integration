{"name": "Usuwanie szablonu rozliczen", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.payoffs_test.TestPayoffs object at 0x0000025FA3273AF0>\n\n    @allure.title(\"Usuwanie szablonu rozliczen\")\n    def test_delete_payoff_template(self):\n        side_bar = SideBar(self.driver)\n        side_bar.get_in_payoffs_templates()\n        payoffs_page = PayoffsPage(self.driver)\n>       payoffs_page.delete_template(PayoffsData.template_name_change, PayoffsData.receiver)\n\ntests\\payoffs_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\payoffs_page.py:143: in delete_template\n    self.wait.until(ec.element_to_be_clickable((By.XPATH, delete_xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f2f3f965d2538f1b689c7612a45739d9\")>, method = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x0000025FA3E03A60>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "Przejdz do 'Szablony'", "status": "passed", "start": 1632732438002, "stop": 1632732438122}, {"name": "Usuwanie szablonu", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Sara\\PycharmProjects\\TMS_testy\\pages\\payoffs_page.py\", line 143, in delete_template\n    self.wait.until(ec.element_to_be_clickable((By.XPATH, delete_xpath)))\n  File \"c:\\users\\sara\\pycharmprojects\\tms_testy\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "title", "value": "'Szablon Ptaszkowo - automat'"}, {"name": "receiver", "value": "'O011350'"}], "start": 1632732438122, "stop": 1632732453671}], "attachments": [{"name": "log", "source": "730b2c7c-0669-4c19-a69f-8df76b183c14-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "59c5b359-7319-462c-88bf-24e02894be43-attachment.txt", "type": "text/plain"}], "start": 1632732438001, "stop": 1632732453672, "uuid": "6d605800-e530-4825-88ec-fb65ba40e6e0", "historyId": "34ad61735ffb64ea03d511c9be432b88", "testCaseId": "efda6af205b17372530343b99fde9ee6", "fullName": "tests.payoffs_test.TestPayoffs#test_delete_payoff_template", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_in_admin')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "payoffs_test"}, {"name": "subSuite", "value": "TestPayoffs"}, {"name": "host", "value": "DESKTOP-LSRI7PH"}, {"name": "thread", "value": "14960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.payoffs_test"}]}